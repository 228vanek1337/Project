# Применение алгоритмов поиска по графу для решения задач транспорта в умном городе – заявка на IT-проект
### Группа: 10 - МИ - 1
### Электронная почта: ivanvf@inbox.ru
### VK: https://vk.com/vanyavfvf

**[НАЗВАНИЕ ПРОЕКТА]**

“Применение алгоритмов поиска по графу для решения задач транспорта в умном городе”

**[ПРОБЛЕМНОЕ ПОЛЕ]**

В умных городах существует ряд проблем, таких как пробки, трудности с парковкой, которые можно решить с помощью написания программы о поиске путей в графах.

**[ЗАКАЗЧИК/ПОТЕНЦИАЛЬНАЯ АУДИТОРИЯ]**

Правительство Москвы разрабатывает проект “умный город” и выделяет для него достаточно большое финансирование, моя программа будет очень полезна в реализации этого проекта, а также для отдельных парковок.

**[АППАРАТНЫЕ ТРЕБОВАНИЯ]**

* Компилятор для C++
* Windows 8+
* 512 MB RAM
* 30 MB памяти на устройстве

**[ФУНКЦИОНАЛЬНЫЕ ТРЕБОВАНИЯ]**

* Принимать на вход модель состояния предметной области(состояние пробок, дорог, препятствий, парковочных мест, загрузки)
*	Выдавать оптимальный алгоритм(в том числе по скорости) для перемещения

**[ПОХОЖИЕ/АНАЛОГИЧНЫЕ ПРОДУКТЫ]**

* Частично похожим приложением является “Яндекс.Карты”. В данном приложении имеется возможность отслеживать уровень пробок в городе на данный момент по встроенной шкале при помощи веб-сервиса “Яндекс.пробки”. Однако это приложение не поможет решить проблемы умного города в сфере парковок.
* Помимо этого, существует приложение “Парковки Москвы 2.0”, однако анализ его функционала показал, что с помощью него можно лишь искать ближайшие парковочные зоны и оплачивать парковку, а не анализировать парковку на предмет занятых мест.

**[ИНСТРУМЕНТЫ РАЗРАБОТКИ]** 

* Qt Creator(язык С++)
* Microsoft Visual Studio 2017

**[ЭТАПЫ РАЗРАБОТКИ]**

*Изучение алгоритмов поиска по графу
*Посещение занятий в клубе программистов 1С для получения дополнительной информации по написанию проектов на C++
*Разработка и создание простейших алгоритмов, которые лягут в основу итоговой программы
*Написание основной части программы
*Создание бета-версии продукта
*Тестирование
*Устранение ошибок
*Защита проекта

**[ВОЗМОЖНЫЕ РИСКИ]**
Неправильно смоделированная предметная матрица, которая даётся на вход может препятствовать правильной работе программы
